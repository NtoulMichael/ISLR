# -*- coding: utf-8 -*-
"""Exe8.Chapter2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NpzvAgG1D-krWx_Scje5zLokHzdmTG_z
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
from pandas.plotting import scatter_matrix
# Importing Libaries

from google.colab import files
uploaded = files.upload()
# Upload the csv, a promt will appear and you will need to upload the College.csv file from your local drive.

df =pd.read_csv('College.csv')
print(df)
# Load the csv and assign in to df.

df.set_index("Unnamed: 0", inplace = True)
df.head()
# Assign the first variable as index, then delete it.

summary=df.describe()
print(summary)
# Provide a summary.

y = sns.pairplot(df.loc[:, "Apps":"Books"])
plt.show()
# Provide a pairs plot of the first ten numeric variables.

ax = sns.catplot(x = "Private", y = "Outstate", kind = "box", order = ["Yes", "No"], data = df)
ax.set(ylabel = "Out-of-state tuition (dollars)")
plt.show()
# A boxplot of Private vs Outstate.

# Create a new column called Elite and set the default value as "No".
# Select all rows (i.e. schools) with over 50% of their students coming from the top 10% of their high school class.
# Set the value of the Elite column for those schools to "Yes".
df["Elite"] = "No"
df.loc[df["Top10perc"] > 50, "Elite"] = "Yes"
# Count the occurnce of Elite.
dfen = df["Elite"].groupby(by = df["Elite"]).count()
print (dfen)
# Create a boxploy of Outstate vs Elite.
ax = sns.catplot(x = "Elite", y = "Outstate", kind = "box", order = ["Yes", "No"], data = df)
ax.set(ylabel = "Out-of-state tuition (dollars)")
plt.show()

# Create grid of plots.
fig, axes = plt.subplots(nrows = 2, ncols = 2, figsize = (15, 10))

# Create hist for number of app.
sns.distplot(df["Apps"], kde = False, ax = axes[0, 0])
axes[0, 0].set(xlabel = "", title = "General Apps")

# Create hist for apps at private .
sns.distplot(df.loc[df["Private"] == "Yes", "Apps"], kde = False, ax = axes[0, 1])
axes[0, 1].set(xlabel = "", title = "Private")

# Create hist of apps at elite. 
sns.distplot(df.loc[df["Elite"] == "Yes", "Apps"], kde = False, ax = axes[1, 0])
axes[1, 0].set(xlabel = "", title = "Elite")

# Create hist of apps public.
sns.distplot(df.loc[df["Private"] == "No", "Apps"], kde = False, ax = axes[1, 1])
axes[1, 1].set(xlabel = "", title = "Public")
# Title
fig.suptitle("Histograms by school types")

# Make a column for the acceptance percentage of each school
df["AcceptPerc"] = df["Accept"] / df["Apps"] * 100
# Side-by-side boxplots for public vs private schools
ax = sns.catplot(x = "Private", y = "AcceptPerc", kind = "box", order = ["Yes", "No"], data = df)
ax.set(ylabel = "Percent of applicants accepted")
plt.show()
# Generate numerical summary of acceptance percentage, public vs private schools
dfs = df["AcceptPerc"].groupby(by = df["Private"]).describe()
print(dfs)
# Side-by-side boxplots for elite vs non-elite schools
ax = sns.catplot(x = "Elite", y = "AcceptPerc", kind = "box", order = ["Yes", "No"], data = df)
ax.set(ylabel = "Percent of applicants accepted")
plt.show()

"""The boxplots show that while the median acceptance percentages for both types of schools are pretty close at around 70-80%, private schools have a much wider range of acceptance rates (going down to a minimum of 15.45%).

END
"""